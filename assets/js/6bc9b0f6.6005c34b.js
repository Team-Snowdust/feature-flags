"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[221],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,h=d["".concat(c,".").concat(f)]||d[f]||p[f]||r;return n?i.createElement(h,o(o({ref:t},u),{},{components:n})):i.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},98197:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=n(87462),a=(n(67294),n(3905));const r={sidebar_position:2},o="Preferring Predicates",s={unversionedId:"guides/predicates",id:"guides/predicates",title:"Preferring Predicates",description:"When using feature flags, developers often face the choice between using",source:"@site/docs/guides/predicates.md",sourceDirName:"guides",slug:"/guides/predicates",permalink:"/feature-flags/docs/guides/predicates",draft:!1,editUrl:"https://github.com/Team-Snowdust/feature-flags/edit/main/docs/guides/predicates.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Client-Server Communication",permalink:"/feature-flags/docs/guides/client-server"}},c={},l=[{value:"Difference Between Activation Functions and Predicates",id:"difference-between-activation-functions-and-predicates",level:2},{value:"Benefits of Predicates",id:"benefits-of-predicates",level:2},{value:"When to Use Activation Functions",id:"when-to-use-activation-functions",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"preferring-predicates"},"Preferring Predicates"),(0,a.kt)("p",null,"When using feature flags, developers often face the choice between using\nactivation functions or leveraging predicates within user groups or system\nstates. While both can be effective in certain scenarios, predicates should be\npreferred in most situations, offering more clarity, control, and consistency."),(0,a.kt)("h2",{id:"difference-between-activation-functions-and-predicates"},"Difference Between Activation Functions and Predicates"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Activation Functions"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Determine whether a feature flag should be active."),(0,a.kt)("li",{parentName:"ul"},"Their dynamic nature makes them flexible and powerful."),(0,a.kt)("li",{parentName:"ul"},"The flexibility comes at the cost of serialization. Activation functions\ncannot be serialized, and need to be handled separately which can lead to\nunexpected behaviors.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Predicates"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Are conditions that determines the truth value for a specific scenario, e.g.\n",(0,a.kt)("inlineCode",{parentName:"li"},"isInBetaGroup()"),"."),(0,a.kt)("li",{parentName:"ul"},"When used within user groups or system states, they can provide a clear,\nconcise, and consistent method to control feature activation."),(0,a.kt)("li",{parentName:"ul"},"As they're based on predefined conditions and don't require function\nexecution, they're inherently serializable.")),(0,a.kt)("p",null,"They differ in usage as well. Activation functions are set during flag\nconfiguration, while predicates are used to define the conditions under which a\nflag is active."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Activation Function"',title:'"Activation','Function"':!0},'FeatureFlags.create("myFlag", {\n    active = true,\n    ruleSets = {\n        {\n            activation = function()\n                -- Determine if the feature should be active\n            end,\n        },\n    },\n})\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Predicate"',title:'"Predicate"'},'if\n    FeatureFlags.isActive("myFlag", {\n        userId = userId,\n        groups = {\n            -- We check if the user is in the beta group with this predicate\n            beta = isInBetaGroup(userId),\n        },\n    })\nthen\n    -- This flag is active for this user\nend\n')),(0,a.kt)("h2",{id:"benefits-of-predicates"},"Benefits of Predicates"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Explicit Handling"),": With predicates, developers have more explicit control\nover the conditions under which a feature is activated. Since the logic is\nlaid out clearly, it's easier for other team members to understand, debug,\nand maintain. There is no magic function hidden in the background that\ndetermines if a flag is active or not."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Side Effects"),": Activation functions can have side effects, which might\nlead to unpredictable behavior, especially if external dependencies change.\nPredicates, on the other hand, are pure and deterministic, providing a safer\nway to manage features."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Clarity"),": Predicates are more readable and easier to understand than\nactivation functions. They can be used to define conditions based on user\ngroups, system states, or any other predefined condition."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Consistency"),": Predicates provide simple booleans which are inherently\nserializable, making them easier to use and share across different systems."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Scalability"),": As your system grows and you have more feature flags to\nmanage, keeping track of various activation functions can become cumbersome.\nPredicates, being more declarative, make it simpler to scale your feature\nmanagement without getting lost in the intricacies of function behaviors.")),(0,a.kt)("h2",{id:"when-to-use-activation-functions"},"When to Use Activation Functions"),(0,a.kt)("p",null,"That said, activation functions have their place. They can be beneficial when:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You need to compute dynamic data that cannot be determined by a simple\ncondition."),(0,a.kt)("li",{parentName:"ul"},"You have a complex set of rules that can't be easily encapsulated within a\npredicate."),(0,a.kt)("li",{parentName:"ul"},"You're working in a tightly controlled environment where serialization is not\na concern.")),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"While activation functions offer flexibility, predicates within user groups or\nsystem states provide a more transparent, controlled, and scalable method for\nfeature flag management. By favoring predicates, developers can ensure that\ntheir features are always handled as intended, reducing potential issues down\nthe line."),(0,a.kt)("p",null,"Activation functions are included for times when you need the additional\nflexibility or power they provide. However, they should be used sparingly and\nwith caution. Predicates can do much of the same work, while providing a more\nconsistent and predictable experience."))}p.isMDXComponent=!0}}]);